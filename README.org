#+TITLE: Biorg
#+OPTIONS: toc:nil

Biorg is a schema and a text format for representing events.

Each biorg event has three main parts - a datum, a say metadata and an act metadata. The datum is the description of the event. The say is the person that describes the event. The act is the person that the event is all about. Imagine five guests sitting around a fireplace and telling stories about the host. Each story happened to the host (act) in the past, but it is also happening in the present as the guest (say) is telling it.

* Schema of biorg
 - Act name - the name of the person that the event is all about.

 - Act date - the date that the event happened.

 - Say name - the name of the person that describes the event.

 - Say date - the date when the event was described.

 - Datum - the description of the event.

 - File path (optional) - the path to the digital asset that verifies the event.

 - any other optional metadata

* Format of biorg files

The biorg format is a subset of [[https://orgmode.org/][org-mode]]. It consists of first-level headings with the value ".", a property block with metadata, and an entry that specifies an arbitrary text called "datum".

#+begin_src org
,* .
:PROPERTIES:
:ACTDATE: <2001-01-01>
:ACTNAME: bob
:SAYDATE: <2011-01-01>
:SAYNAME: alice
:FILEPATH: path/to/song-recording.wav
:TAG: memoirs
:END:
Alice remembers that ten years ago Bob wrote her a song. She has a recording of it, but does not remember what the song was called.
,* .
:PROPERTIES:
:ACTDATE: <2002-01-01>
:ACTNAME: bob
:SAYDATE: <2011-01-01>
:SAYNAME: alice
:FILEPATH: path/to/poem-recording.wav
:TAG: memoirs
:END:
Alice remembers that nine years ago Bob wrote her a poem. She has a recording of it, but does not remember what the poem was called.
#+end_src

** array values

Example of database that has arrays: https://source.qualifiedself.org/fetsorn/csvs-en

Some fields can be of type object or array object.

Array object “files” is a JS object {"_": "files", "UUID": "ba0561...076", "items": []}.

Object “file” is a JS object {"_": "file", "UUID": "88d3...26d", "filename": "pic.jpg", "filehash": "ba05...69"}.

The objects are serialized as an elisp property list
#+begin_src org
,* .
:PROPERTIES:
:FILES: (:_ "files" :UUID "ba0561...076" :items ((:_ "file" :UUID "88d3...26d" :filename "pic.jpg" :filehash "ba05...69") (:_ "file" :UUID "acab...94a" :filename "story.txt" :filehash "aa12...cb")))
:END:
#+end_src
